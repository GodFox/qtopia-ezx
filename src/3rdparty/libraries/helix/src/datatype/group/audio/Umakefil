# 
# ***** BEGIN LICENSE BLOCK ***** 
# Version: RCSL 1.0/RPSL 1.0 
#  
# Portions Copyright (c) 1995-2002 RealNetworks, Inc. All Rights Reserved. 
#      
# The contents of this file, and the files included with this file, are 
# subject to the current version of the RealNetworks Public Source License 
# Version 1.0 (the "RPSL") available at 
# http://www.helixcommunity.org/content/rpsl unless you have licensed 
# the file under the RealNetworks Community Source License Version 1.0 
# (the "RCSL") available at http://www.helixcommunity.org/content/rcsl, 
# in which case the RCSL will apply. You may also obtain the license terms 
# directly from RealNetworks.  You may not use this file except in 
# compliance with the RPSL or, if you have a valid RCSL with RealNetworks 
# applicable to this file, the RCSL.  Please see the applicable RPSL or 
# RCSL for the rights, obligations and limitations governing use of the 
# contents of the file.  
#  
# This file is part of the Helix DNA Technology. RealNetworks is the 
# developer of the Original Code and owns the copyrights in the portions 
# it created. 
#  
# This file, and the files included with this file, is distributed and made 
# available on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER 
# EXPRESS OR IMPLIED, AND REALNETWORKS HEREBY DISCLAIMS ALL SUCH WARRANTIES, 
# INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS 
# FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT. 
# 
# Technology Compatibility Kit Test Suite(s) Location: 
#    http://www.helixcommunity.org/content/tck 
# 
# Contributor(s): 
#  
# ***** END LICENSE BLOCK ***** 
# 

UmakefileVersion(2,2)

bIncludeAMR = (project.IsDefined("HELIX_FEATURE_AUDIO_CODEC_AMRNB") or  \
               project.IsDefined("HELIX_FEATURE_AUDIO_CODEC_AMRWB")) and \
              project.IsDefined("HELIX_FEATURE_PLAYBACK_LOCAL")

# Add module includes needed by all
project.AddModuleIncludes("common/include")

# Add module libraries needed by all
project.AddModuleLibraries("common/system[syslib]",
                           "common/dbgtool[debuglib]",
                           "common/util[utillib]",
                           "common/container[contlib]",
                           "common/runtime[runtlib]",
                           "common/log/logutil[logutillib]")

if bIncludeAMR:
        project.AddModuleIncludes("datatype/common/container/pub")
        project.AddModuleLibraries("datatype/amr/fileformat[amrfflib]",
                                   "datatype/mp3/payload[mp3payld]",
                                   "datatype/mp4/payload[mp4pyldlib]",
                                   "datatype/amr/common[amrcomlib]")

if project.IsDefined("HELIX_FEATURE_AUDIO_MPEG4"):
        project.AddModuleIncludes("datatype/include",
                                  "datatype/mp4/audio/renderer",
                                  "datatype/common/container/pub")
        project.AddModuleLibraries("datatype/mp4/audio/renderer[mp4arenderlib]",
                                   "datatype/common/audrend[audrend]",
                                   "protocol/common/util[protutillib]",
                                   "protocol/sdp[sdplib]",
                                   "protocol/rtsp[rtsplib]",
                                   "datatype/mp4/common[mp4comlib]",
                                   "datatype/mp3/payload[mp3payld]",
                                   "datatype/mp4/payload[mp4pyldlib]",
                                   "datatype/common/util[dtutillib]",
                                   "datatype/amr/common[amrcomlib]",
                                   "datatype/mp3/common[mp3lib]")

if project.IsDefined("HELIX_FEATURE_AUDIO_WAVE"):
        project.AddModuleIncludes("datatype/common/include")
        project.AddModuleLibraries("datatype/wav/fileformat[wvffplin]",
                                   "datatype/common/util[dtutillib]",
                                   "datatype/wav/renderer/pcm[pcmrendlib]")
        if project.IsDefined("HELIX_FEATURE_AUDIO_MPA_LAYER3"):
                project.AddModuleLibraries("datatype/mp3/payload[mp3payld]")
        if project.IsDefined("HELIX_FEATURE_AUDIO_MPEG4"):
                project.AddModuleLibraries("datatype/mp4/payload[mp4pyldlib]")

                                   
if project.IsDefined("HELIX_FEATURE_AUDIO_AU"):
        project.AddModuleIncludes("datatype/common/include",
                                  "datatype/common/container/pub")
        project.AddModuleLibraries("datatype/au/fileformat[auffplin]",
                                   "datatype/common/audrend[audrend]",
                                   "datatype/common/util[dtutillib]",
                                   "datatype/wav/renderer/pcm[pcmrendlib]")
        if project.IsDefined("HELIX_FEATURE_AUDIO_MPA_LAYER3"):
                project.AddModuleLibraries("datatype/mp3/payload[mp3payld]",
                                           "datatype/mp3/common[mp3lib]")
        if project.IsDefined("HELIX_FEATURE_AUDIO_MPEG4"):
               project.AddModuleLibraries("datatype/mp4/payload[mp4pyldlib]")

                                   
if project.IsDefined("HELIX_FEATURE_AUDIO_AIFF"):
        project.AddModuleIncludes("datatype/common/include",
                                  "datatype/common/container/pub")
        project.AddModuleLibraries("datatype/aiff/fileformat[aiffplin]",
                                   "datatype/common/audrend[audrend]",
                                   "datatype/common/util[dtutillib]",
                                   "datatype/wav/renderer/pcm[pcmrendlib]")
        if project.IsDefined("HELIX_FEATURE_AUDIO_MPA_LAYER3"):
                project.AddModuleLibraries("datatype/mp3/payload[mp3payld]",
                                           "datatype/mp3/common[mp3lib]")
        if project.IsDefined("HELIX_FEATURE_AUDIO_MPEG4"):
                project.AddModuleLibraries("datatype/mp4/payload[mp4pyldlib]")

project.AddSources("audplin.cpp")

project.ExportFunction("RMACreateInstance",
                       "IUnknown** ppObj",
                       "common/include",
                       "hxcom.h")
project.ExportFunction("CanUnload2", "void")

if not project.IsDefined("HELIX_FEATURE_DLLACCESS_CLIENT"):
    project.ExportFunction("SetDLLAccessPath", "const char* pszPath")

DLLTarget("audplin")

DependTarget()
