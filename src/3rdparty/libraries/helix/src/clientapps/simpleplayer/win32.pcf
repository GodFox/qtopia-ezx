# 
# ***** BEGIN LICENSE BLOCK ***** 
# Version: RCSL 1.0/RPSL 1.0 
#  
# Portions Copyright (c) 1995-2002 RealNetworks, Inc. All Rights Reserved. 
#      
# The contents of this file, and the files included with this file, are 
# subject to the current version of the RealNetworks Public Source License 
# Version 1.0 (the "RPSL") available at 
# http://www.helixcommunity.org/content/rpsl unless you have licensed 
# the file under the RealNetworks Community Source License Version 1.0 
# (the "RCSL") available at http://www.helixcommunity.org/content/rcsl, 
# in which case the RCSL will apply. You may also obtain the license terms 
# directly from RealNetworks.  You may not use this file except in 
# compliance with the RPSL or, if you have a valid RCSL with RealNetworks 
# applicable to this file, the RCSL.  Please see the applicable RPSL or 
# RCSL for the rights, obligations and limitations governing use of the 
# contents of the file.  
#  
# This file is part of the Helix DNA Technology. RealNetworks is the 
# developer of the Original Code and owns the copyrights in the portions 
# it created. 
#  
# This file, and the files included with this file, is distributed and made 
# available on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER 
# EXPRESS OR IMPLIED, AND REALNETWORKS HEREBY DISCLAIMS ALL SUCH WARRANTIES, 
# INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS 
# FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT. 
# 
# Technology Compatibility Kit Test Suite(s) Location: 
#    http://www.helixcommunity.org/content/tck 
# 
# Contributor(s): 
#  
# ***** END LICENSE BLOCK ***** 
# 
project.AddSystemLibraries("version.lib", 
                           "kernel32.lib", 
                           "user32.lib", 
                           "advapi32.lib", 
                           "winmm.lib",
                           "gdi32.lib",
                           "ole32.lib",
                           "uuid.lib",
                           "oleaut32.lib")

if project.IsDefined("HELIX_FEATURE_AUTO_BANDWIDTH_DETECTION"):
    project.AddSources("exabd.cpp")

if project.IsDefined("HELIX_FEATURE_VIDEO") and \
   project.BuildOption("nodll"):
        project.AddSystemPaths(os.path.join(GetSDKPath("dxsdk"), "lib", "x86"))
        project.AddSystemPaths(os.path.join(GetSDKPath("dxsdk"), "lib"))
        project.AddSystemLibraries("ddraw.lib")

if project.IsDefined("HELIX_FEATURE_VIDEO"):
        project.AddIncludes(os.path.join(GetSDKPath("dxsdk"), "include"))

if project.BuildOption("debug"):
	lib_subdir = "dbg32"
elif project.BuildOption("release"):
	lib_subdir = "rel32"

if project.BuildOption("nodll"):
	if project.IsDefined("HELIX_FEATURE_VIDEO_CODEC_RV30") or \
           project.IsDefined("HELIX_FEATURE_VIDEO_CODEC_RV40"):
		if project.IsDefined("HELIX_FEATURE_ANSIC_RV89COMBO"):
	 		project.AddLibraries(GetSDKPath("rv89combo_c_libs")+"[cdec]")
	 	else:
			project.AddLibraries(GetSDKPath("rv89combo_libs")+"[adec40]")
        	if project.IsDefined("HELIX_CONFIG_RN_CRT"):
                	platform.link.args['default'] = platform.link.args['default'] + ' /nodefaultlib'
        	else:
                	if project.BuildOption("debug"):
                        	platform.link.args['debug'] = platform.link.args['debug']    + \
	                                                      ' /nodefaultlib:libircmt.lib ' + \
	                                                      ' /nodefaultlib:libmmt.lib '   + \
	                                                      ' /nodefaultlib:libmmd.lib '   + \
	                                                      ' /nodefaultlib:libcmt.lib '
                	elif project.BuildOption("release"):
                        	platform.link.args['release'] = platform.link.args['release']  + \
	                                                        ' /nodefaultlib:libircmt.lib ' + \
	                                                        ' /nodefaultlib:libmmt.lib '   + \
	                                                        ' /nodefaultlib:libmmd.lib '   + \
	                                                        ' /nodefaultlib:libcmt.lib '

if project.BuildOption("nodll"):
	if project.IsDefined("HELIX_FEATURE_VIDEO_CODEC_RV20"):
		project.AddLibraries(GetSDKPath("rvg2dec_libs")+"[adecg2]")

