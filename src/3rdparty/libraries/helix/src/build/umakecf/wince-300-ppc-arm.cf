# 
#  ***** BEGIN LICENSE BLOCK *****  
#   
#  Source last modified: $Id: wince-300-ppc-arm.cf,v 1.11 2006/04/24 23:34:08 jfinnecy Exp $ 
#   
#  Copyright Notices: 
#   
#  Portions Copyright (c) 1995-2006 RealNetworks, Inc. All Rights Reserved. 
#   
#  Patent Notices: This file may contain technology protected by one or  
#  more of the patents listed at www.helixcommunity.org 
#   
#  1.   The contents of this file, and the files included with this file, 
#  are protected by copyright controlled by RealNetworks and its  
#  licensors, and made available by RealNetworks subject to the current  
#  version of the RealNetworks Public Source License (the "RPSL")  
#  available at  * http://www.helixcommunity.org/content/rpsl unless  
#  you have licensed the file under the current version of the  
#  RealNetworks Community Source License (the "RCSL") available at 
#  http://www.helixcommunity.org/content/rcsl, in which case the RCSL 
#  will apply.  You may also obtain the license terms directly from 
#  RealNetworks.  You may not use this file except in compliance with 
#  the RPSL or, if you have a valid RCSL with RealNetworks applicable 
#  to this file, the RCSL.  Please see the applicable RPSL or RCSL for 
#  the rights, obligations and limitations governing use of the 
#  contents of the file. 
#   
#  2.  Alternatively, the contents of this file may be used under the 
#  terms of the GNU General Public License Version 2 (the 
#  "GPL") in which case the provisions of the GPL are applicable 
#  instead of those above.  Please note that RealNetworks and its  
#  licensors disclaim any implied patent license under the GPL.   
#  If you wish to allow use of your version of this file only under  
#  the terms of the GPL, and not to allow others 
#  to use your version of this file under the terms of either the RPSL 
#  or RCSL, indicate your decision by deleting Paragraph 1 above 
#  and replace them with the notice and other provisions required by 
#  the GPL. If you do not delete Paragraph 1 above, a recipient may 
#  use your version of this file under the terms of any one of the 
#  RPSL, the RCSL or the GPL. 
#   
#  This file is part of the Helix DNA Technology.  RealNetworks is the 
#  developer of the Original Code and owns the copyrights in the 
#  portions it created.   Copying, including reproducing, storing,  
#  adapting or translating, any or all of this material other than  
#  pursuant to the license terms referred to above requires the prior  
#  written consent of RealNetworks and its licensors 
#   
#  This file, and the files included with this file, is distributed 
#  and made available by RealNetworks on an 'AS IS' basis, WITHOUT  
#  WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND REALNETWORKS  
#  AND ITS LICENSORS HEREBY DISCLAIM  ALL SUCH WARRANTIES, INCLUDING  
#  WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS  
#  FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT. 
#   
#  Technology Compatibility Kit Test Suite(s) Location:  
#     http://www.helixcommunity.org/content/tck 
#   
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 

"""Wince using embedded VC++"""

## include the common WinCE 3.0 Pocket PC info
exec_config_file('wince-300-ppc.cf')

## list of PCF files to run
platform.pcf_prefix_list.append('wince-300-ppc-arm')

## WinCE Platform Defines
project.AddDefines("_ARM",
                   "ARM",
                   "HELIX_CONFIG_FIXEDPOINT",
                   "_ARM_")

ce_lib_dir = "%s\\lib\\arm" % pocket_pc_prefix

## Modify existing compiler
cc.cmd = "\"%s\\EVC\\WCE300\\BIN\\clarm\"" % evc_prefix

class WinCE_ARM_Linker(WinCELinker):
    def machine_option(self):
        return  ["/MACHINE:ARM"] + WinCELinker.machine_option(self)
        
platform.link = WinCE_ARM_Linker()

## compile assembly files
class ARMAssembler(Compiler):
    def __init__(self):
        Compiler.__init__(self)

    def setup_flags_var(self):
        def_str = form_string(platform.form_var("ARMASMINCLUDES"))
        return form_string(self.make_flags, '=', self.form_args(), def_str)

platform.asm = ARMAssembler()
asm = platform.asm
asm.cmd = "\"%s\\EVC\\WCE300\\BIN\\armasm\"" % evc_prefix
asm.source_arg = ' '
asm.make_var = 'ARMASM'
asm.make_flags = 'ARMASMFLAGS'
asm.target_arg = '-o'
asm.include_arg = '-I '
asm.args['default'] = '-cpu StrongARM1 -arch 4 -pd "ARM_COTULLA SETA 0"'
asm.args['debug'] = '-G -PD "_DEBUG SETA 0"'
platform.build_rules['.s'] = BuildRule('.s', '.obj',  asm)
