# 
#  ***** BEGIN LICENSE BLOCK *****  
#   
#  Source last modified: $Id: sunos-5.x-sparc-gcc.cf,v 1.5 2006/06/19 23:11:34 jfinnecy Exp $ 
#   
#  Copyright Notices: 
#   
#  Portions Copyright (c) 1995-2006 RealNetworks, Inc. All Rights Reserved. 
#   
#  Patent Notices: This file may contain technology protected by one or  
#  more of the patents listed at www.helixcommunity.org 
#   
#  1.   The contents of this file, and the files included with this file, 
#  are protected by copyright controlled by RealNetworks and its  
#  licensors, and made available by RealNetworks subject to the current  
#  version of the RealNetworks Public Source License (the "RPSL")  
#  available at  * http://www.helixcommunity.org/content/rpsl unless  
#  you have licensed the file under the current version of the  
#  RealNetworks Community Source License (the "RCSL") available at 
#  http://www.helixcommunity.org/content/rcsl, in which case the RCSL 
#  will apply.  You may also obtain the license terms directly from 
#  RealNetworks.  You may not use this file except in compliance with 
#  the RPSL or, if you have a valid RCSL with RealNetworks applicable 
#  to this file, the RCSL.  Please see the applicable RPSL or RCSL for 
#  the rights, obligations and limitations governing use of the 
#  contents of the file. 
#   
#  2.  Alternatively, the contents of this file may be used under the 
#  terms of the GNU General Public License Version 2 (the 
#  "GPL") in which case the provisions of the GPL are applicable 
#  instead of those above.  Please note that RealNetworks and its  
#  licensors disclaim any implied patent license under the GPL.   
#  If you wish to allow use of your version of this file only under  
#  the terms of the GPL, and not to allow others 
#  to use your version of this file under the terms of either the RPSL 
#  or RCSL, indicate your decision by deleting Paragraph 1 above 
#  and replace them with the notice and other provisions required by 
#  the GPL. If you do not delete Paragraph 1 above, a recipient may 
#  use your version of this file under the terms of any one of the 
#  RPSL, the RCSL or the GPL. 
#   
#  This file is part of the Helix DNA Technology.  RealNetworks is the 
#  developer of the Original Code and owns the copyrights in the 
#  portions it created.   Copying, including reproducing, storing,  
#  adapting or translating, any or all of this material other than  
#  pursuant to the license terms referred to above requires the prior  
#  written consent of RealNetworks and its licensors 
#   
#  This file, and the files included with this file, is distributed 
#  and made available by RealNetworks on an 'AS IS' basis, WITHOUT  
#  WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND REALNETWORKS  
#  AND ITS LICENSORS HEREBY DISCLAIM  ALL SUCH WARRANTIES, INCLUDING  
#  WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS  
#  FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT. 
#   
#  Technology Compatibility Kit Test Suite(s) Location:  
#     http://www.helixcommunity.org/content/tck 
#   
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 
"""Base configuration file for SunOS 5.x using gcc."""

exec_config_file('unix.cf')
exec_config_file('gcc.cf')

project.AddDefines("_SUN", "_SOLARIS", "_BIG_ENDIAN", "_STRICT_ALIGNMENT")

cc.args['debug'] = '-g -DDEBUG -D_DEBUG'
cxx.args['debug'] = '-g -DDEBUG -D_DEBUG'

if project.BuildOption("nopic"):
    cc.args['default'] = '-W'
    cxx.args['default'] = '-W'
else:
    cc.args['default'] = '-fPIC -DPIC -W'
    cxx.args['default'] = '-fPIC -DPIC -W'

## setup include paths
project.AddIncludes('/usr/dt/include', '/usr/openwin/include')
project.AddSystemLibraries('socket', 'nsl')

## for building static libraries
platform.make_toc.cmd         = 'ranlib'
platform.make_toc.make_var    = 'RANLIB'

platform.make_lib.cmd         = 'ar cr '
platform.make_lib.make_var    = 'MAKE_LIB'
platform.make_lib.make_flags  = 'MAKE_LIB_FLAGS'

class GXXLinker(GCCLinker):
    def __init__(self):
        Linker.__init__(self)
        self.make_var = 'LD'
        self.make_flags = 'LDFLAGS'
        self.args['profile'] = '-pg'
        self.args['static'] = '-static'
        self.target_arg = '-o'
        self.ldcmd = 'gcc'
        self.ldargs = ''
        self.system_paths = ''

    def set_type(self):
        # in order to specify non-system library paths use the
        # project.system_paths list 
        for item in project.system_paths:
            self.system_paths = self.system_paths + ' ' + item 

        self.cmd = self.ldcmd

        # for EXE targets
        if project.getTargetType() == 'exe':
            project.sys_libraries[-1:-1] = ['dl']

        # form argument string
        argument_string = self.args['default']

        # set for DLL targets
        if project.getTargetType() == 'dll':
            argument_string = '%s -shared' % (argument_string)

            # sybolic option
            if project.build_choices.count('symbolic'):
                argument_string = '%s -Xlinker -Bsymbolic' % (argument_string)

        self.args['default'] = '%s -L/usr/openwin/lib -R/usr/openwin/lib %s -L/usr/lib -L/usr/local/lib ' % (argument_string, self.system_paths)
platform.link = GXXLinker()
