# -*- python -*-
# 
#  ***** BEGIN LICENSE BLOCK *****  
#   
#  Source last modified: $Id: linux-2.2-libc6-gcc32.cf,v 1.7 2006/04/24 23:34:08 jfinnecy Exp $ 
#   
#  Copyright Notices: 
#   
#  Portions Copyright (c) 1995-2006 RealNetworks, Inc. All Rights Reserved. 
#   
#  Patent Notices: This file may contain technology protected by one or  
#  more of the patents listed at www.helixcommunity.org 
#   
#  1.   The contents of this file, and the files included with this file, 
#  are protected by copyright controlled by RealNetworks and its  
#  licensors, and made available by RealNetworks subject to the current  
#  version of the RealNetworks Public Source License (the "RPSL")  
#  available at  * http://www.helixcommunity.org/content/rpsl unless  
#  you have licensed the file under the current version of the  
#  RealNetworks Community Source License (the "RCSL") available at 
#  http://www.helixcommunity.org/content/rcsl, in which case the RCSL 
#  will apply.  You may also obtain the license terms directly from 
#  RealNetworks.  You may not use this file except in compliance with 
#  the RPSL or, if you have a valid RCSL with RealNetworks applicable 
#  to this file, the RCSL.  Please see the applicable RPSL or RCSL for 
#  the rights, obligations and limitations governing use of the 
#  contents of the file. 
#   
#  2.  Alternatively, the contents of this file may be used under the 
#  terms of the GNU General Public License Version 2 (the 
#  "GPL") in which case the provisions of the GPL are applicable 
#  instead of those above.  Please note that RealNetworks and its  
#  licensors disclaim any implied patent license under the GPL.   
#  If you wish to allow use of your version of this file only under  
#  the terms of the GPL, and not to allow others 
#  to use your version of this file under the terms of either the RPSL 
#  or RCSL, indicate your decision by deleting Paragraph 1 above 
#  and replace them with the notice and other provisions required by 
#  the GPL. If you do not delete Paragraph 1 above, a recipient may 
#  use your version of this file under the terms of any one of the 
#  RPSL, the RCSL or the GPL. 
#   
#  This file is part of the Helix DNA Technology.  RealNetworks is the 
#  developer of the Original Code and owns the copyrights in the 
#  portions it created.   Copying, including reproducing, storing,  
#  adapting or translating, any or all of this material other than  
#  pursuant to the license terms referred to above requires the prior  
#  written consent of RealNetworks and its licensors 
#   
#  This file, and the files included with this file, is distributed 
#  and made available by RealNetworks on an 'AS IS' basis, WITHOUT  
#  WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND REALNETWORKS  
#  AND ITS LICENSORS HEREBY DISCLAIM  ALL SUCH WARRANTIES, INCLUDING  
#  WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS  
#  FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT. 
#   
#  Technology Compatibility Kit Test Suite(s) Location:  
#     http://www.helixcommunity.org/content/tck 
#   
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 
"""Linux 2.x using GCC 3.2 libc6 (glibc2)."""

exec_config_file('linux-common.cf')

## list of PCF files to run
platform.pcf_prefix_list = ["unix", "linux2", "linux-2.2-libc6-gcc32"]

## platform defines 
project.AddDefines("_LITTLE_ENDIAN")

## Turn on Threaded Network IO 
project.AddDefines("_UNIX_THREADED_NETWORK_IO")

## This define used on platforms that have native recursive mutexes.
project.AddDefines("_TIMEDWAITS_RECURSIVE_MUTEXES")

## This turns on the non portable ( _NP) thread directives.
project.AddDefines("_GNU_SOURCE")

## Turn on threads for all areas.
project.AddDefines("THREADS_SUPPORTED")

## This define enables compiling of the UnixThreads file.
## It means that that platform has a working threads lib
## that does everything we need.
project.AddDefines("_UNIX_THREADS_SUPPORTED")

## Turn off exceptions, rtti and turn on pentium ops.   Set warning options.
platform.cxx.args["default"] = platform.cxx.args["default"] + " " + \
    "-Wall -Wreturn-type -Wno-non-virtual-dtor -fno-exceptions " + \
    "--permissive -fno-rtti -Wno-ctor-dtor-privacy"

platform.cc.args["default"] = platform.cc.args["default"] + " " + \
    "-Wall -Wreturn-type -fno-exceptions"

## Enable compile time flags needed for rlink to work.
if not project.BuildOption("debug") and project.IsDefined('HELIX_CONFIG_USE_RLINK'):
    platform.cc.args["default"] = platform.cc.args["default"] + " -ffunction-sections -fdata-sections"
    platform.cxx.args["default"] = platform.cxx.args["default"] + " -ffunction-sections -fdata-sections"

## Set the linker to either LinuxLinker or LinuxRLinkLinker depending on
## whether HELIX_CONFIG_USE_RLINK is defined or not.
exec_config_file("linux-linker.cf")

def verify_gcc_callback():
    ccver=get_compiler_version(cc)
    cxxver=get_compiler_version(cxx)

    try:
        ccmajor=int(string.split(ccver,".",1)[0])
    except:
        ccmajor=0

    try:
        cxxmajor=int(string.split(cxxver,".",1)[0])
    except:
        cxxmajor=0
        
    w=[]
    if ccmajor < 3:
        w.append("gcc version is %s, not >= 3.* as expected." % ccver)

    if cxxmajor < 3:
        w.append("g++ version is %s, not >= 3.* as expected." % cxxver)


    if w:
        print " **WARNING**"
        for m in w:
            print m
        print
        print "Compilation will continue in 10 seconds"
        import time
        time.sleep(10)
        

AddIdentifyCallback(verify_gcc_callback)
